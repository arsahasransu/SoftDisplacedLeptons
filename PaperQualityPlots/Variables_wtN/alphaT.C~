void alphaT()
{
//=========Macro generated from canvas: c1/c1
//=========  (Thu Jun  4 12:26:19 2020) by ROOT version 6.18/04
   TCanvas *c1 = new TCanvas("c1", "c1",0,0,782,600);
   gStyle->SetOptStat(0);
   c1->Range(0,0,1,1);
   c1->SetFillColor(0);
   c1->SetBorderMode(0);
   c1->SetBorderSize(2);
   c1->SetFrameBorderMode(0);
  
// ------------>Primitives in pad: 
   TPad *pad = new TPad("", "",0.09,0.08,1,0.95);
   pad->Draw();
   pad->cd();
   pad->Range(0,0,1,1);
   pad->SetFillColor(0);
   pad->SetBorderMode(0);
   pad->SetBorderSize(2);
   pad->SetLogy();
   pad->SetFrameBorderMode(0);
   
   TH1F *alphaT0__21 = new TH1F("alphaT0__21","",25,0,1.25);
   alphaT0__21->SetBinContent(3,0.0009545021);
   alphaT0__21->SetBinContent(4,0.0009545021);
   alphaT0__21->SetBinContent(5,0.006999682);
   alphaT0__21->SetBinContent(6,0.01972638);
   alphaT0__21->SetBinContent(7,0.05217944);
   alphaT0__21->SetBinContent(8,0.1244034);
   alphaT0__21->SetBinContent(9,0.2577156);
   alphaT0__21->SetBinContent(10,0.4129812);
   alphaT0__21->SetBinContent(11,0.08685969);
   alphaT0__21->SetBinContent(12,0.009545021);
   alphaT0__21->SetBinContent(13,0.007317849);
   alphaT0__21->SetBinContent(14,0.004454343);
   alphaT0__21->SetBinContent(15,0.001909004);
   alphaT0__21->SetBinContent(16,0.002227172);
   alphaT0__21->SetBinContent(17,0.001272669);
   alphaT0__21->SetBinContent(18,0.002227172);
   alphaT0__21->SetBinContent(19,0.0006363347);
   alphaT0__21->SetBinContent(20,0.001590837);
   alphaT0__21->SetBinContent(21,0.001272669);
   alphaT0__21->SetBinContent(22,0.0009545021);
   alphaT0__21->SetBinContent(23,0.0009545021);
   alphaT0__21->SetBinContent(24,0.001272669);
   alphaT0__21->SetBinContent(25,0.001590837);
   alphaT0__21->SetBinContent(26,0.3070315);
   alphaT0__21->SetBinError(3,0.000551082);
   alphaT0__21->SetBinError(4,0.000551082);
   alphaT0__21->SetBinError(5,0.001492337);
   alphaT0__21->SetBinError(6,0.002505252);
   alphaT0__21->SetBinError(7,0.00407453);
   alphaT0__21->SetBinError(8,0.006291352);
   alphaT0__21->SetBinError(9,0.009055202);
   alphaT0__21->SetBinError(10,0.01146286);
   alphaT0__21->SetBinError(11,0.005256987);
   alphaT0__21->SetBinError(12,0.001742674);
   alphaT0__21->SetBinError(13,0.001525877);
   alphaT0__21->SetBinError(14,0.001190473);
   alphaT0__21->SetBinError(15,0.0007793477);
   alphaT0__21->SetBinError(16,0.0008417917);
   alphaT0__21->SetBinError(17,0.0006363347);
   alphaT0__21->SetBinError(18,0.0008417917);
   alphaT0__21->SetBinError(19,0.0004499566);
   alphaT0__21->SetBinError(20,0.0007114438);
   alphaT0__21->SetBinError(21,0.0006363347);
   alphaT0__21->SetBinError(22,0.000551082);
   alphaT0__21->SetBinError(23,0.000551082);
   alphaT0__21->SetBinError(24,0.0006363347);
   alphaT0__21->SetBinError(25,0.0007114438);
   alphaT0__21->SetBinError(26,0.009883694);
   alphaT0__21->SetMinimum(0.0005);
   alphaT0__21->SetMaximum(1);
   alphaT0__21->SetEntries(4108);
   alphaT0__21->SetLineWidth(3);
   alphaT0__21->GetXaxis()->SetRange(1,26);
   alphaT0__21->GetXaxis()->SetLabelFont(42);
   alphaT0__21->GetXaxis()->SetLabelOffset(-0.07);
   alphaT0__21->GetXaxis()->SetLabelSize(0.055);
   alphaT0__21->GetXaxis()->SetTitleSize(0.035);
   alphaT0__21->GetXaxis()->SetTitleOffset(1);
   alphaT0__21->GetXaxis()->SetTitleFont(42);
   alphaT0__21->GetYaxis()->SetLabelFont(42);
   alphaT0__21->GetYaxis()->SetLabelOffset(-0.05);
   alphaT0__21->GetYaxis()->SetLabelSize(0.055);
   alphaT0__21->GetYaxis()->SetTitleSize(0.035);
   alphaT0__21->GetYaxis()->SetTitleFont(42);
   alphaT0__21->GetZaxis()->SetLabelFont(42);
   alphaT0__21->GetZaxis()->SetLabelSize(0.035);
   alphaT0__21->GetZaxis()->SetTitleSize(0.035);
   alphaT0__21->GetZaxis()->SetTitleOffset(1);
   alphaT0__21->GetZaxis()->SetTitleFont(42);
   alphaT0__21->Draw("hist  E");
   
   TH1F *alphaT1__22 = new TH1F("alphaT1__22","",25,0,1.25);
   alphaT1__22->SetBinContent(3,8.367327e-05);
   alphaT1__22->SetBinContent(4,0.0003013153);
   alphaT1__22->SetBinContent(5,0.00160343);
   alphaT1__22->SetBinContent(6,0.01271984);
   alphaT1__22->SetBinContent(7,0.05125708);
   alphaT1__22->SetBinContent(8,0.1313291);
   alphaT1__22->SetBinContent(9,0.2743543);
   alphaT1__22->SetBinContent(10,0.3982189);
   alphaT1__22->SetBinContent(11,0.09886844);
   alphaT1__22->SetBinContent(12,0.01447116);
   alphaT1__22->SetBinContent(13,0.004952422);
   alphaT1__22->SetBinContent(14,0.002392297);
   alphaT1__22->SetBinContent(15,0.001786525);
   alphaT1__22->SetBinContent(16,0.001070363);
   alphaT1__22->SetBinContent(17,0.001783232);
   alphaT1__22->SetBinContent(18,0.0007339387);
   alphaT1__22->SetBinContent(19,0.0007479023);
   alphaT1__22->SetBinContent(20,0.0006939551);
   alphaT1__22->SetBinContent(21,0.0005006414);
   alphaT1__22->SetBinContent(22,0.0006572963);
   alphaT1__22->SetBinContent(23,0.0003000456);
   alphaT1__22->SetBinContent(24,0.0005568671);
   alphaT1__22->SetBinContent(25,0.000617247);
   alphaT1__22->SetBinContent(26,0.009161196);
   alphaT1__22->SetBinError(3,8.367328e-05);
   alphaT1__22->SetBinError(4,0.0001512931);
   alphaT1__22->SetBinError(5,0.0003265047);
   alphaT1__22->SetBinError(6,0.0009211636);
   alphaT1__22->SetBinError(7,0.001869583);
   alphaT1__22->SetBinError(8,0.002997429);
   alphaT1__22->SetBinError(9,0.00434645);
   alphaT1__22->SetBinError(10,0.005248116);
   alphaT1__22->SetBinError(11,0.002572413);
   alphaT1__22->SetBinError(12,0.0009796448);
   alphaT1__22->SetBinError(13,0.0005617443);
   alphaT1__22->SetBinError(14,0.0004171059);
   alphaT1__22->SetBinError(15,0.0003583828);
   alphaT1__22->SetBinError(16,0.0002699394);
   alphaT1__22->SetBinError(17,0.0003488128);
   alphaT1__22->SetBinError(18,0.0002115047);
   alphaT1__22->SetBinError(19,0.0002047616);
   alphaT1__22->SetBinError(20,0.0002303152);
   alphaT1__22->SetBinError(21,0.0001800691);
   alphaT1__22->SetBinError(22,0.0002188089);
   alphaT1__22->SetBinError(23,0.0001497889);
   alphaT1__22->SetBinError(24,0.0001989724);
   alphaT1__22->SetBinError(25,0.0002054277);
   alphaT1__22->SetBinError(26,0.0008030612);
   alphaT1__22->SetMinimum(0.0005);
   alphaT1__22->SetMaximum(0.2);
   alphaT1__22->SetEntries(19133);

   Int_t ci;      // for color index setting
   TColor *color; // for color definition with alpha
   ci = TColor::GetColor("#0000ff");
   alphaT1__22->SetLineColor(ci);
   alphaT1__22->SetLineWidth(3);
   alphaT1__22->GetXaxis()->SetRange(1,26);
   alphaT1__22->GetXaxis()->SetLabelFont(42);
   alphaT1__22->GetXaxis()->SetLabelSize(0.035);
   alphaT1__22->GetXaxis()->SetTitleSize(0.035);
   alphaT1__22->GetXaxis()->SetTitleOffset(1);
   alphaT1__22->GetXaxis()->SetTitleFont(42);
   alphaT1__22->GetYaxis()->SetLabelFont(42);
   alphaT1__22->GetYaxis()->SetLabelSize(0.035);
   alphaT1__22->GetYaxis()->SetTitleSize(0.035);
   alphaT1__22->GetYaxis()->SetTitleFont(42);
   alphaT1__22->GetZaxis()->SetLabelFont(42);
   alphaT1__22->GetZaxis()->SetLabelSize(0.035);
   alphaT1__22->GetZaxis()->SetTitleSize(0.035);
   alphaT1__22->GetZaxis()->SetTitleOffset(1);
   alphaT1__22->GetZaxis()->SetTitleFont(42);
   alphaT1__22->Draw("hist SAME E");
   
   TH1F *alphaT2__23 = new TH1F("alphaT2__23","",25,0,1.25);
   alphaT2__23->SetBinContent(3,0.0001528101);
   alphaT2__23->SetBinContent(4,0.0006574337);
   alphaT2__23->SetBinContent(5,0.001256019);
   alphaT2__23->SetBinContent(6,0.008480841);
   alphaT2__23->SetBinContent(7,0.04209623);
   alphaT2__23->SetBinContent(8,0.1282229);
   alphaT2__23->SetBinContent(9,0.2687374);
   alphaT2__23->SetBinContent(10,0.4188226);
   alphaT2__23->SetBinContent(11,0.1037578);
   alphaT2__23->SetBinContent(12,0.01350495);
   alphaT2__23->SetBinContent(13,0.004296042);
   alphaT2__23->SetBinContent(14,0.002091228);
   alphaT2__23->SetBinContent(15,0.002660716);
   alphaT2__23->SetBinContent(16,0.0009002317);
   alphaT2__23->SetBinContent(17,0.0006091376);
   alphaT2__23->SetBinContent(18,0.0006794836);
   alphaT2__23->SetBinContent(19,0.0006575434);
   alphaT2__23->SetBinContent(20,0.0002531992);
   alphaT2__23->SetBinContent(21,0.0003968916);
   alphaT2__23->SetBinContent(22,0.0003933339);
   alphaT2__23->SetBinContent(23,0.0003885493);
   alphaT2__23->SetBinContent(24,0.000599101);
   alphaT2__23->SetBinContent(25,0.0003855698);
   alphaT2__23->SetBinContent(26,0.007524129);
   alphaT2__23->SetBinError(3,0.000108054);
   alphaT2__23->SetBinError(4,0.0002198046);
   alphaT2__23->SetBinError(5,0.0002808577);
   alphaT2__23->SetBinError(6,0.0007338855);
   alphaT2__23->SetBinError(7,0.001633952);
   alphaT2__23->SetBinError(8,0.002874593);
   alphaT2__23->SetBinError(9,0.004163247);
   alphaT2__23->SetBinError(10,0.005213277);
   alphaT2__23->SetBinError(11,0.002554929);
   alphaT2__23->SetBinError(12,0.0009133868);
   alphaT2__23->SetBinError(13,0.000518361);
   alphaT2__23->SetBinError(14,0.0003642715);
   alphaT2__23->SetBinError(15,0.0004167554);
   alphaT2__23->SetBinError(16,0.000243571);
   alphaT2__23->SetBinError(17,0.000195427);
   alphaT2__23->SetBinError(18,0.0002104553);
   alphaT2__23->SetBinError(19,0.0002140246);
   alphaT2__23->SetBinError(20,0.0001256983);
   alphaT2__23->SetBinError(21,0.0001634178);
   alphaT2__23->SetBinError(22,0.0001614365);
   alphaT2__23->SetBinError(23,0.0001601082);
   alphaT2__23->SetBinError(24,0.000200512);
   alphaT2__23->SetBinError(25,0.0001599393);
   alphaT2__23->SetBinError(26,0.0007076611);
   alphaT2__23->SetMinimum(0.0005);
   alphaT2__23->SetMaximum(0.2);
   alphaT2__23->SetEntries(17847);

   ci = TColor::GetColor("#6666ff");
   alphaT2__23->SetLineColor(ci);
   alphaT2__23->SetLineWidth(3);
   alphaT2__23->GetXaxis()->SetRange(1,26);
   alphaT2__23->GetXaxis()->SetLabelFont(42);
   alphaT2__23->GetXaxis()->SetLabelSize(0.035);
   alphaT2__23->GetXaxis()->SetTitleSize(0.035);
   alphaT2__23->GetXaxis()->SetTitleOffset(1);
   alphaT2__23->GetXaxis()->SetTitleFont(42);
   alphaT2__23->GetYaxis()->SetLabelFont(42);
   alphaT2__23->GetYaxis()->SetLabelSize(0.035);
   alphaT2__23->GetYaxis()->SetTitleSize(0.035);
   alphaT2__23->GetYaxis()->SetTitleFont(42);
   alphaT2__23->GetZaxis()->SetLabelFont(42);
   alphaT2__23->GetZaxis()->SetLabelSize(0.035);
   alphaT2__23->GetZaxis()->SetTitleSize(0.035);
   alphaT2__23->GetZaxis()->SetTitleOffset(1);
   alphaT2__23->GetZaxis()->SetTitleFont(42);
   alphaT2__23->Draw("hist SAME E");
   
   TH1F *alphaT3__24 = new TH1F("alphaT3__24","",25,0,1.25);
   alphaT3__24->SetBinContent(2,9.76747e-06);
   alphaT3__24->SetBinContent(3,3.94106e-05);
   alphaT3__24->SetBinContent(4,0.000491077);
   alphaT3__24->SetBinContent(5,0.005589649);
   alphaT3__24->SetBinContent(6,0.02365116);
   alphaT3__24->SetBinContent(7,0.07011048);
   alphaT3__24->SetBinContent(8,0.1437801);
   alphaT3__24->SetBinContent(9,0.2198999);
   alphaT3__24->SetBinContent(10,0.2807764);
   alphaT3__24->SetBinContent(11,0.1174282);
   alphaT3__24->SetBinContent(12,0.04552475);
   alphaT3__24->SetBinContent(13,0.02467703);
   alphaT3__24->SetBinContent(14,0.01653103);
   alphaT3__24->SetBinContent(15,0.01185352);
   alphaT3__24->SetBinContent(16,0.008206697);
   alphaT3__24->SetBinContent(17,0.00608683);
   alphaT3__24->SetBinContent(18,0.005050481);
   alphaT3__24->SetBinContent(19,0.004772248);
   alphaT3__24->SetBinContent(20,0.003773268);
   alphaT3__24->SetBinContent(21,0.002895638);
   alphaT3__24->SetBinContent(22,0.002711172);
   alphaT3__24->SetBinContent(23,0.002247467);
   alphaT3__24->SetBinContent(24,0.00208666);
   alphaT3__24->SetBinContent(25,0.001807115);
   alphaT3__24->SetBinContent(26,0.03489854);
   alphaT3__24->SetBinError(2,9.76747e-06);
   alphaT3__24->SetBinError(3,1.970585e-05);
   alphaT3__24->SetBinError(4,6.469941e-05);
   alphaT3__24->SetBinError(5,0.0002197992);
   alphaT3__24->SetBinError(6,0.0004529834);
   alphaT3__24->SetBinError(7,0.0007839039);
   alphaT3__24->SetBinError(8,0.001124592);
   alphaT3__24->SetBinError(9,0.001393579);
   alphaT3__24->SetBinError(10,0.001575813);
   alphaT3__24->SetBinError(11,0.001015072);
   alphaT3__24->SetBinError(12,0.0006290357);
   alphaT3__24->SetBinError(13,0.0004636807);
   alphaT3__24->SetBinError(14,0.0003803892);
   alphaT3__24->SetBinError(15,0.0003218322);
   alphaT3__24->SetBinError(16,0.0002680795);
   alphaT3__24->SetBinError(17,0.0002311924);
   alphaT3__24->SetBinError(18,0.0002111086);
   alphaT3__24->SetBinError(19,0.0002059838);
   alphaT3__24->SetBinError(20,0.0001830482);
   alphaT3__24->SetBinError(21,0.0001602022);
   alphaT3__24->SetBinError(22,0.0001552664);
   alphaT3__24->SetBinError(23,0.0001418966);
   alphaT3__24->SetBinError(24,0.0001361597);
   alphaT3__24->SetBinError(25,0.0001274573);
   alphaT3__24->SetBinError(26,0.0005594784);
   alphaT3__24->SetMinimum(0.0005);
   alphaT3__24->SetMaximum(0.2);
   alphaT3__24->SetEntries(123638);

   ci = TColor::GetColor("#cc3399");
   alphaT3__24->SetLineColor(ci);
   alphaT3__24->SetLineWidth(3);
   alphaT3__24->GetXaxis()->SetRange(1,26);
   alphaT3__24->GetXaxis()->SetLabelFont(42);
   alphaT3__24->GetXaxis()->SetLabelSize(0.035);
   alphaT3__24->GetXaxis()->SetTitleSize(0.035);
   alphaT3__24->GetXaxis()->SetTitleOffset(1);
   alphaT3__24->GetXaxis()->SetTitleFont(42);
   alphaT3__24->GetYaxis()->SetLabelFont(42);
   alphaT3__24->GetYaxis()->SetLabelSize(0.035);
   alphaT3__24->GetYaxis()->SetTitleSize(0.035);
   alphaT3__24->GetYaxis()->SetTitleFont(42);
   alphaT3__24->GetZaxis()->SetLabelFont(42);
   alphaT3__24->GetZaxis()->SetLabelSize(0.035);
   alphaT3__24->GetZaxis()->SetTitleSize(0.035);
   alphaT3__24->GetZaxis()->SetTitleOffset(1);
   alphaT3__24->GetZaxis()->SetTitleFont(42);
   alphaT3__24->Draw("hist SAME E");
   TText *text = new TText(1.275,0.2583983,"Overflow");
   text->SetTextAlign(12);
   text->SetTextSize(0.035);
   text->SetTextAngle(90);
   text->Draw();
   pad->Modified();
   c1->cd();
  
// ------------>Primitives in pad: 
   TPad *pad = new TPad("", "",0.001,0.08,0.08,0.85);
   pad->Draw();
   pad->cd();
   pad->Range(0,0,1,1);
   pad->SetFillColor(0);
   pad->SetBorderMode(0);
   pad->SetBorderSize(2);
   pad->SetFrameBorderMode(0);
   TLatex *   tex = new TLatex(0.7,0.3,"normalized no. of events");
   tex->SetTextFont(42);
   tex->SetTextSize(0.45);
   tex->SetTextAngle(90);
   tex->SetLineWidth(2);
   tex->Draw();
   pad->Modified();
   c1->cd();
  
// ------------>Primitives in pad: 
   TPad *pad = new TPad("", "",0.08,0.001,1,0.08);
   pad->Draw();
   pad->cd();
   pad->Range(0,0,1,1);
   pad->SetFillColor(0);
   pad->SetBorderMode(0);
   pad->SetBorderSize(2);
   pad->SetFrameBorderMode(0);
      tex = new TLatex(0.5,0.4,"#alpha_{T}");
   tex->SetTextFont(42);
   tex->SetTextSize(0.6);
   tex->SetLineWidth(2);
   tex->Draw();
   pad->Modified();
   c1->cd();
  
// ------------>Primitives in pad: 
   TPad *pad = new TPad("", "",0.001,0.88,1,0.98);
   pad->Draw();
   pad->cd();
   pad->Range(0,0,1,1);
   pad->SetFillColor(0);
   pad->SetBorderMode(0);
   pad->SetBorderSize(2);
   pad->SetFrameBorderMode(0);
   
   TLegend *leg = new TLegend(0,0,0,0,NULL,"brNDC");
   leg->SetBorderSize(0);
   leg->SetTextSize(0.4);
   leg->SetLineColor(1);
   leg->SetLineStyle(1);
   leg->SetLineWidth(1);
   leg->SetFillColor(0);
   leg->SetFillStyle(1001);
   TLegendEntry *entry=leg->AddEntry("alphaT0","HF Background","l");
   entry->SetLineColor(1);
   entry->SetLineStyle(1);
   entry->SetLineWidth(1);
   entry->SetMarkerColor(1);
   entry->SetMarkerStyle(21);
   entry->SetMarkerSize(1);
   leg->Draw();
      tex = new TLatex(0.12,0.15,"Signal (m_{c}, #Deltam, c#scale[1.2]{#tau}_{c})");
   tex->SetTextFont(42);
   tex->SetTextSize(0.4);
   tex->SetLineWidth(2);
   tex->Draw();
   
   leg = new TLegend(0,0,0,0,NULL,"brNDC");
   leg->SetBorderSize(0);
   leg->SetTextSize(0.4);
   leg->SetLineColor(1);
   leg->SetLineStyle(1);
   leg->SetLineWidth(1);
   leg->SetFillColor(0);
   leg->SetFillStyle(1001);
   entry=leg->AddEntry("alphaT1","(220, 20, DM)","l");
   entry->SetLineColor(1);
   entry->SetLineStyle(1);
   entry->SetLineWidth(1);
   entry->SetMarkerColor(1);
   entry->SetMarkerStyle(21);
   entry->SetMarkerSize(1);
   entry=leg->AddEntry("alphaT2","(324, 20, DM)","l");
   entry->SetLineColor(1);
   entry->SetLineStyle(1);
   entry->SetLineWidth(1);
   entry->SetMarkerColor(1);
   entry->SetMarkerStyle(21);
   entry->SetMarkerSize(1);
   leg->Draw();
   pad->Modified();
   c1->cd();
   c1->Modified();
   c1->cd();
   c1->SetSelected(c1);
}
