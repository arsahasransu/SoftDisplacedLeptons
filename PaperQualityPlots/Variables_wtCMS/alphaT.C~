void alphaT()
{
//=========Macro generated from canvas: c1/c1
//=========  (Thu Jun  4 12:24:12 2020) by ROOT version 6.18/04
   TCanvas *c1 = new TCanvas("c1", "c1",0,0,782,600);
   gStyle->SetOptStat(0);
   c1->Range(0,0,1,1);
   c1->SetFillColor(0);
   c1->SetBorderMode(0);
   c1->SetBorderSize(2);
   c1->SetFrameBorderMode(0);
  
// ------------>Primitives in pad: 
   TPad *pad = new TPad("", "",0.09,0.08,1,0.95);
   pad->Draw();
   pad->cd();
   pad->Range(0,0,1,1);
   pad->SetFillColor(0);
   pad->SetBorderMode(0);
   pad->SetBorderSize(2);
   pad->SetLogy();
   pad->SetFrameBorderMode(0);
   
   TH1F *alphaT0__21 = new TH1F("alphaT0__21","",25,0,1.25);
   alphaT0__21->SetBinContent(3,0.0009545021);
   alphaT0__21->SetBinContent(4,0.0009545021);
   alphaT0__21->SetBinContent(5,0.006999682);
   alphaT0__21->SetBinContent(6,0.01972638);
   alphaT0__21->SetBinContent(7,0.05217944);
   alphaT0__21->SetBinContent(8,0.1244034);
   alphaT0__21->SetBinContent(9,0.2577156);
   alphaT0__21->SetBinContent(10,0.4129812);
   alphaT0__21->SetBinContent(11,0.08685969);
   alphaT0__21->SetBinContent(12,0.009545021);
   alphaT0__21->SetBinContent(13,0.007317849);
   alphaT0__21->SetBinContent(14,0.004454343);
   alphaT0__21->SetBinContent(15,0.001909004);
   alphaT0__21->SetBinContent(16,0.002227172);
   alphaT0__21->SetBinContent(17,0.001272669);
   alphaT0__21->SetBinContent(18,0.002227172);
   alphaT0__21->SetBinContent(19,0.0006363347);
   alphaT0__21->SetBinContent(20,0.001590837);
   alphaT0__21->SetBinContent(21,0.001272669);
   alphaT0__21->SetBinContent(22,0.0009545021);
   alphaT0__21->SetBinContent(23,0.0009545021);
   alphaT0__21->SetBinContent(24,0.001272669);
   alphaT0__21->SetBinContent(25,0.001590837);
   alphaT0__21->SetBinContent(26,0.3070315);
   alphaT0__21->SetBinError(3,0.000551082);
   alphaT0__21->SetBinError(4,0.000551082);
   alphaT0__21->SetBinError(5,0.001492337);
   alphaT0__21->SetBinError(6,0.002505252);
   alphaT0__21->SetBinError(7,0.00407453);
   alphaT0__21->SetBinError(8,0.006291352);
   alphaT0__21->SetBinError(9,0.009055202);
   alphaT0__21->SetBinError(10,0.01146286);
   alphaT0__21->SetBinError(11,0.005256987);
   alphaT0__21->SetBinError(12,0.001742674);
   alphaT0__21->SetBinError(13,0.001525877);
   alphaT0__21->SetBinError(14,0.001190473);
   alphaT0__21->SetBinError(15,0.0007793477);
   alphaT0__21->SetBinError(16,0.0008417917);
   alphaT0__21->SetBinError(17,0.0006363347);
   alphaT0__21->SetBinError(18,0.0008417917);
   alphaT0__21->SetBinError(19,0.0004499566);
   alphaT0__21->SetBinError(20,0.0007114438);
   alphaT0__21->SetBinError(21,0.0006363347);
   alphaT0__21->SetBinError(22,0.000551082);
   alphaT0__21->SetBinError(23,0.000551082);
   alphaT0__21->SetBinError(24,0.0006363347);
   alphaT0__21->SetBinError(25,0.0007114438);
   alphaT0__21->SetBinError(26,0.009883694);
   alphaT0__21->SetMinimum(0.0005);
   alphaT0__21->SetMaximum(1);
   alphaT0__21->SetEntries(4108);
   alphaT0__21->SetLineWidth(3);
   alphaT0__21->GetXaxis()->SetRange(1,26);
   alphaT0__21->GetXaxis()->SetLabelFont(42);
   alphaT0__21->GetXaxis()->SetLabelOffset(-0.07);
   alphaT0__21->GetXaxis()->SetLabelSize(0.055);
   alphaT0__21->GetXaxis()->SetTitleSize(0.035);
   alphaT0__21->GetXaxis()->SetTitleOffset(1);
   alphaT0__21->GetXaxis()->SetTitleFont(42);
   alphaT0__21->GetYaxis()->SetLabelFont(42);
   alphaT0__21->GetYaxis()->SetLabelOffset(-0.05);
   alphaT0__21->GetYaxis()->SetLabelSize(0.055);
   alphaT0__21->GetYaxis()->SetTitleSize(0.035);
   alphaT0__21->GetYaxis()->SetTitleFont(42);
   alphaT0__21->GetZaxis()->SetLabelFont(42);
   alphaT0__21->GetZaxis()->SetLabelSize(0.035);
   alphaT0__21->GetZaxis()->SetTitleSize(0.035);
   alphaT0__21->GetZaxis()->SetTitleOffset(1);
   alphaT0__21->GetZaxis()->SetTitleFont(42);
   alphaT0__21->Draw("hist  E");
   
   TH1F *alphaT1__22 = new TH1F("alphaT1__22","",25,0,1.25);
   alphaT1__22->SetBinContent(3,8.841352e-05);
   alphaT1__22->SetBinContent(4,0.0003183854);
   alphaT1__22->SetBinContent(5,0.001532667);
   alphaT1__22->SetBinContent(6,0.01248896);
   alphaT1__22->SetBinContent(7,0.05085657);
   alphaT1__22->SetBinContent(8,0.130148);
   alphaT1__22->SetBinContent(9,0.2753548);
   alphaT1__22->SetBinContent(10,0.4012182);
   alphaT1__22->SetBinContent(11,0.09733301);
   alphaT1__22->SetBinContent(12,0.0139757);
   alphaT1__22->SetBinContent(13,0.004743154);
   alphaT1__22->SetBinContent(14,0.002422101);
   alphaT1__22->SetBinContent(15,0.001875607);
   alphaT1__22->SetBinContent(16,0.001046806);
   alphaT1__22->SetBinContent(17,0.001806041);
   alphaT1__22->SetBinContent(18,0.0006725709);
   alphaT1__22->SetBinContent(19,0.0007392702);
   alphaT1__22->SetBinContent(20,0.0007268002);
   alphaT1__22->SetBinContent(21,0.0004784376);
   alphaT1__22->SetBinContent(22,0.0006900927);
   alphaT1__22->SetBinContent(23,0.0003151097);
   alphaT1__22->SetBinContent(24,0.0005648744);
   alphaT1__22->SetBinContent(25,0.0006043811);
   alphaT1__22->SetBinContent(26,0.00928942);
   alphaT1__22->SetBinError(3,8.841352e-05);
   alphaT1__22->SetBinError(4,0.0001598642);
   alphaT1__22->SetBinError(5,0.0003398882);
   alphaT1__22->SetBinError(6,0.0009626633);
   alphaT1__22->SetBinError(7,0.001957867);
   alphaT1__22->SetBinError(8,0.003138361);
   alphaT1__22->SetBinError(9,0.004559034);
   alphaT1__22->SetBinError(10,0.005507867);
   alphaT1__22->SetBinError(11,0.002690372);
   alphaT1__22->SetBinError(12,0.001022037);
   alphaT1__22->SetBinError(13,0.0005848548);
   alphaT1__22->SetBinError(14,0.0004384622);
   alphaT1__22->SetBinError(15,0.0003786555);
   alphaT1__22->SetBinError(16,0.0002820097);
   alphaT1__22->SetBinError(17,0.0003657855);
   alphaT1__22->SetBinError(18,0.0002179281);
   alphaT1__22->SetBinError(19,0.0002133201);
   alphaT1__22->SetBinError(20,0.0002433342);
   alphaT1__22->SetBinError(21,0.0001871108);
   alphaT1__22->SetBinError(22,0.0002311835);
   alphaT1__22->SetBinError(23,0.0001582629);
   alphaT1__22->SetBinError(24,0.0002089959);
   alphaT1__22->SetBinError(25,0.000214646);
   alphaT1__22->SetBinError(26,0.0008437236);
   alphaT1__22->SetMinimum(0.0005);
   alphaT1__22->SetMaximum(0.2);
   alphaT1__22->SetEntries(19133);

   Int_t ci;      // for color index setting
   TColor *color; // for color definition with alpha
   ci = TColor::GetColor("#0000ff");
   alphaT1__22->SetLineColor(ci);
   alphaT1__22->SetLineWidth(3);
   alphaT1__22->GetXaxis()->SetRange(1,26);
   alphaT1__22->GetXaxis()->SetLabelFont(42);
   alphaT1__22->GetXaxis()->SetLabelSize(0.035);
   alphaT1__22->GetXaxis()->SetTitleSize(0.035);
   alphaT1__22->GetXaxis()->SetTitleOffset(1);
   alphaT1__22->GetXaxis()->SetTitleFont(42);
   alphaT1__22->GetYaxis()->SetLabelFont(42);
   alphaT1__22->GetYaxis()->SetLabelSize(0.035);
   alphaT1__22->GetYaxis()->SetTitleSize(0.035);
   alphaT1__22->GetYaxis()->SetTitleFont(42);
   alphaT1__22->GetZaxis()->SetLabelFont(42);
   alphaT1__22->GetZaxis()->SetLabelSize(0.035);
   alphaT1__22->GetZaxis()->SetTitleSize(0.035);
   alphaT1__22->GetZaxis()->SetTitleOffset(1);
   alphaT1__22->GetZaxis()->SetTitleFont(42);
   alphaT1__22->Draw("hist SAME E");
   
   TH1F *alphaT2__23 = new TH1F("alphaT2__23","",25,0,1.25);
   alphaT2__23->SetBinContent(3,0.0001561479);
   alphaT2__23->SetBinContent(4,0.0006717941);
   alphaT2__23->SetBinContent(5,0.001231152);
   alphaT2__23->SetBinContent(6,0.008359101);
   alphaT2__23->SetBinContent(7,0.04173594);
   alphaT2__23->SetBinContent(8,0.1281986);
   alphaT2__23->SetBinContent(9,0.2691112);
   alphaT2__23->SetBinContent(10,0.4197543);
   alphaT2__23->SetBinContent(11,0.1030371);
   alphaT2__23->SetBinContent(12,0.01342788);
   alphaT2__23->SetBinContent(13,0.004241093);
   alphaT2__23->SetBinContent(14,0.002072488);
   alphaT2__23->SetBinContent(15,0.002708765);
   alphaT2__23->SetBinContent(16,0.0009198955);
   alphaT2__23->SetBinContent(17,0.0005844148);
   alphaT2__23->SetBinContent(18,0.0006733703);
   alphaT2__23->SetBinContent(19,0.0006511596);
   alphaT2__23->SetBinContent(20,0.0002568138);
   alphaT2__23->SetBinContent(21,0.000405561);
   alphaT2__23->SetBinContent(22,0.0004019256);
   alphaT2__23->SetBinContent(23,0.0003951431);
   alphaT2__23->SetBinContent(24,0.0006121873);
   alphaT2__23->SetBinContent(25,0.0003939919);
   alphaT2__23->SetBinContent(26,0.007620479);
   alphaT2__23->SetBinError(3,0.0001104142);
   alphaT2__23->SetBinError(4,0.0002246058);
   alphaT2__23->SetBinError(5,0.0002850766);
   alphaT2__23->SetBinError(6,0.0007460627);
   alphaT2__23->SetBinError(7,0.001662333);
   alphaT2__23->SetBinError(8,0.002928906);
   alphaT2__23->SetBinError(9,0.004242343);
   alphaT2__23->SetBinError(10,0.005312973);
   alphaT2__23->SetBinError(11,0.002600483);
   alphaT2__23->SetBinError(12,0.0009297591);
   alphaT2__23->SetBinError(13,0.0005272729);
   alphaT2__23->SetBinError(14,0.0003705513);
   alphaT2__23->SetBinError(15,0.0004258371);
   alphaT2__23->SetBinError(16,0.0002488914);
   alphaT2__23->SetBinError(17,0.0001978754);
   alphaT2__23->SetBinError(18,0.0002141976);
   alphaT2__23->SetBinError(19,0.0002178773);
   alphaT2__23->SetBinError(20,0.0001284296);
   alphaT2__23->SetBinError(21,0.0001669874);
   alphaT2__23->SetBinError(22,0.0001649628);
   alphaT2__23->SetBinError(23,0.0001635945);
   alphaT2__23->SetBinError(24,0.0002048918);
   alphaT2__23->SetBinError(25,0.0001634328);
   alphaT2__23->SetBinError(26,0.0007222318);
   alphaT2__23->SetMinimum(0.0005);
   alphaT2__23->SetMaximum(0.2);
   alphaT2__23->SetEntries(17847);

   ci = TColor::GetColor("#6666ff");
   alphaT2__23->SetLineColor(ci);
   alphaT2__23->SetLineWidth(3);
   alphaT2__23->GetXaxis()->SetRange(1,26);
   alphaT2__23->GetXaxis()->SetLabelFont(42);
   alphaT2__23->GetXaxis()->SetLabelSize(0.035);
   alphaT2__23->GetXaxis()->SetTitleSize(0.035);
   alphaT2__23->GetXaxis()->SetTitleOffset(1);
   alphaT2__23->GetXaxis()->SetTitleFont(42);
   alphaT2__23->GetYaxis()->SetLabelFont(42);
   alphaT2__23->GetYaxis()->SetLabelSize(0.035);
   alphaT2__23->GetYaxis()->SetTitleSize(0.035);
   alphaT2__23->GetYaxis()->SetTitleFont(42);
   alphaT2__23->GetZaxis()->SetLabelFont(42);
   alphaT2__23->GetZaxis()->SetLabelSize(0.035);
   alphaT2__23->GetZaxis()->SetTitleSize(0.035);
   alphaT2__23->GetZaxis()->SetTitleOffset(1);
   alphaT2__23->GetZaxis()->SetTitleFont(42);
   alphaT2__23->Draw("hist SAME E");
   
   TH1F *alphaT3__24 = new TH1F("alphaT3__24","",25,0,1.25);
   alphaT3__24->SetBinContent(2,9.83411e-06);
   alphaT3__24->SetBinContent(3,3.967948e-05);
   alphaT3__24->SetBinContent(4,0.0004827824);
   alphaT3__24->SetBinContent(5,0.005522887);
   alphaT3__24->SetBinContent(6,0.02349725);
   alphaT3__24->SetBinContent(7,0.0699551);
   alphaT3__24->SetBinContent(8,0.1436658);
   alphaT3__24->SetBinContent(9,0.2199755);
   alphaT3__24->SetBinContent(10,0.2811152);
   alphaT3__24->SetBinContent(11,0.1175002);
   alphaT3__24->SetBinContent(12,0.04543752);
   alphaT3__24->SetBinContent(13,0.02468867);
   alphaT3__24->SetBinContent(14,0.01656168);
   alphaT3__24->SetBinContent(15,0.01185168);
   alphaT3__24->SetBinContent(16,0.008174763);
   alphaT3__24->SetBinContent(17,0.006095475);
   alphaT3__24->SetBinContent(18,0.005060295);
   alphaT3__24->SetBinContent(19,0.004782799);
   alphaT3__24->SetBinContent(20,0.00378469);
   alphaT3__24->SetBinContent(21,0.00290764);
   alphaT3__24->SetBinContent(22,0.0027161);
   alphaT3__24->SetBinContent(23,0.00225775);
   alphaT3__24->SetBinContent(24,0.002098029);
   alphaT3__24->SetBinContent(25,0.001818717);
   alphaT3__24->SetBinContent(26,0.03502916);
   alphaT3__24->SetBinError(2,9.834109e-06);
   alphaT3__24->SetBinError(3,1.984029e-05);
   alphaT3__24->SetBinError(4,6.49284e-05);
   alphaT3__24->SetBinError(5,0.0002207174);
   alphaT3__24->SetBinError(6,0.0004552016);
   alphaT3__24->SetBinError(7,0.0007882708);
   alphaT3__24->SetBinError(8,0.001131069);
   alphaT3__24->SetBinError(9,0.001401837);
   alphaT3__24->SetBinError(10,0.001585356);
   alphaT3__24->SetBinError(11,0.00102112);
   alphaT3__24->SetBinError(12,0.0006325603);
   alphaT3__24->SetBinError(13,0.0004664458);
   alphaT3__24->SetBinError(14,0.0003827423);
   alphaT3__24->SetBinError(15,0.0003237335);
   alphaT3__24->SetBinError(16,0.0002695171);
   alphaT3__24->SetBinError(17,0.0002326062);
   alphaT3__24->SetBinError(18,0.0002124219);
   alphaT3__24->SetBinError(19,0.0002072598);
   alphaT3__24->SetBinError(20,0.0001842057);
   alphaT3__24->SetBinError(21,0.0001612492);
   alphaT3__24->SetBinError(22,0.0001562188);
   alphaT3__24->SetBinError(23,0.000142824);
   alphaT3__24->SetBinError(24,0.0001370676);
   alphaT3__24->SetBinError(25,0.0001283262);
   alphaT3__24->SetBinError(26,0.0005630617);
   alphaT3__24->SetMinimum(0.0005);
   alphaT3__24->SetMaximum(0.2);
   alphaT3__24->SetEntries(123638);

   ci = TColor::GetColor("#cc3399");
   alphaT3__24->SetLineColor(ci);
   alphaT3__24->SetLineWidth(3);
   alphaT3__24->GetXaxis()->SetRange(1,26);
   alphaT3__24->GetXaxis()->SetLabelFont(42);
   alphaT3__24->GetXaxis()->SetLabelSize(0.035);
   alphaT3__24->GetXaxis()->SetTitleSize(0.035);
   alphaT3__24->GetXaxis()->SetTitleOffset(1);
   alphaT3__24->GetXaxis()->SetTitleFont(42);
   alphaT3__24->GetYaxis()->SetLabelFont(42);
   alphaT3__24->GetYaxis()->SetLabelSize(0.035);
   alphaT3__24->GetYaxis()->SetTitleSize(0.035);
   alphaT3__24->GetYaxis()->SetTitleFont(42);
   alphaT3__24->GetZaxis()->SetLabelFont(42);
   alphaT3__24->GetZaxis()->SetLabelSize(0.035);
   alphaT3__24->GetZaxis()->SetTitleSize(0.035);
   alphaT3__24->GetZaxis()->SetTitleOffset(1);
   alphaT3__24->GetZaxis()->SetTitleFont(42);
   alphaT3__24->Draw("hist SAME E");
   TText *text = new TText(1.275,0.2583983,"Overflow");
   text->SetTextAlign(12);
   text->SetTextSize(0.035);
   text->SetTextAngle(90);
   text->Draw();
   pad->Modified();
   c1->cd();
  
// ------------>Primitives in pad: 
   TPad *pad = new TPad("", "",0.001,0.08,0.08,0.85);
   pad->Draw();
   pad->cd();
   pad->Range(0,0,1,1);
   pad->SetFillColor(0);
   pad->SetBorderMode(0);
   pad->SetBorderSize(2);
   pad->SetFrameBorderMode(0);
   TLatex *   tex = new TLatex(0.7,0.3,"normalized no. of events");
   tex->SetTextFont(42);
   tex->SetTextSize(0.45);
   tex->SetTextAngle(90);
   tex->SetLineWidth(2);
   tex->Draw();
   pad->Modified();
   c1->cd();
  
// ------------>Primitives in pad: 
   TPad *pad = new TPad("", "",0.08,0.001,1,0.08);
   pad->Draw();
   pad->cd();
   pad->Range(0,0,1,1);
   pad->SetFillColor(0);
   pad->SetBorderMode(0);
   pad->SetBorderSize(2);
   pad->SetFrameBorderMode(0);
      tex = new TLatex(0.5,0.4,"#alpha_{T}");
   tex->SetTextFont(42);
   tex->SetTextSize(0.6);
   tex->SetLineWidth(2);
   tex->Draw();
   pad->Modified();
   c1->cd();
  
// ------------>Primitives in pad: 
   TPad *pad = new TPad("", "",0.001,0.88,1,0.98);
   pad->Draw();
   pad->cd();
   pad->Range(0,0,1,1);
   pad->SetFillColor(0);
   pad->SetBorderMode(0);
   pad->SetBorderSize(2);
   pad->SetFrameBorderMode(0);
   
   TLegend *leg = new TLegend(0,0,0,0,NULL,"brNDC");
   leg->SetBorderSize(0);
   leg->SetTextSize(0.4);
   leg->SetLineColor(1);
   leg->SetLineStyle(1);
   leg->SetLineWidth(1);
   leg->SetFillColor(0);
   leg->SetFillStyle(1001);
   TLegendEntry *entry=leg->AddEntry("alphaT0","HF Background","l");
   entry->SetLineColor(1);
   entry->SetLineStyle(1);
   entry->SetLineWidth(1);
   entry->SetMarkerColor(1);
   entry->SetMarkerStyle(21);
   entry->SetMarkerSize(1);
   leg->Draw();
      tex = new TLatex(0.12,0.15,"Signal (m_{c}, #Deltam, c#scale[1.2]{#tau}_{c})");
   tex->SetTextFont(42);
   tex->SetTextSize(0.4);
   tex->SetLineWidth(2);
   tex->Draw();
   
   leg = new TLegend(0,0,0,0,NULL,"brNDC");
   leg->SetBorderSize(0);
   leg->SetTextSize(0.4);
   leg->SetLineColor(1);
   leg->SetLineStyle(1);
   leg->SetLineWidth(1);
   leg->SetFillColor(0);
   leg->SetFillStyle(1001);
   entry=leg->AddEntry("alphaT1","(220, 20, DM)","l");
   entry->SetLineColor(1);
   entry->SetLineStyle(1);
   entry->SetLineWidth(1);
   entry->SetMarkerColor(1);
   entry->SetMarkerStyle(21);
   entry->SetMarkerSize(1);
   entry=leg->AddEntry("alphaT2","(324, 20, DM)","l");
   entry->SetLineColor(1);
   entry->SetLineStyle(1);
   entry->SetLineWidth(1);
   entry->SetMarkerColor(1);
   entry->SetMarkerStyle(21);
   entry->SetMarkerSize(1);
   leg->Draw();
   pad->Modified();
   c1->cd();
   c1->Modified();
   c1->cd();
   c1->SetSelected(c1);
}
